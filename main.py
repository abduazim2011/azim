import json
import random
from telethon import TelegramClient, events

# ==== –î–ê–ù–ù–´–ï –ê–ö–ö–ê–£–ù–¢–ê ====
API_ID = 25165568
API_HASH = "0f13997a616a03ccd368f3c0f794208c"
SESSION_NAME = "first_comment"

# ==== –§–ê–ô–õ –° –ù–ê–°–¢–†–û–ô–ö–ê–ú–ò ====
CONFIG_FILE = "config.json"

# ==== –ó–ê–ì–†–£–ó–ö–ê / –°–û–•–†–ê–ù–ï–ù–ò–ï ====
def load_config():
    try:
        with open(CONFIG_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return {
            "ENABLED": True,
            "KEYWORDS": [],
            "COMMENTS": [],
            "CHANNELS": []
        }

def save_config():
    with open(CONFIG_FILE, "w", encoding="utf-8") as f:
        json.dump(config, f, ensure_ascii=False, indent=2)

config = load_config()

# ==== –ö–õ–ò–ï–ù–¢ ====
client = TelegramClient(SESSION_NAME, API_ID, API_HASH)

# ==== –ê–í–¢–û–û–¢–í–ï–¢ –ù–ê –ù–û–í–´–ï –ü–û–°–¢–´ –ö–ê–ù–ê–õ–û–í ====
@client.on(events.NewMessage)
async def handler(event):
    if not config["ENABLED"]:
        return

    chat = await event.get_chat()
    if not hasattr(chat, "username"):
        return

    username = (chat.username or "").lower()
    if username not in [c.lower() for c in config["CHANNELS"]]:
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    text = event.raw_text.lower()
    if not any(w in text for w in config["KEYWORDS"]):
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —ç—Ç–æ –ø–æ—Å—Ç –∫–∞–Ω–∞–ª–∞ (–±–µ–∑ reply –Ω–∞ –ª—é–¥–µ–π)
    if not event.is_channel:
        return

    # –ù–∞—Ö–æ–¥–∏–º —Å–≤—è–∑–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    try:
        linked_chat = (await client(GetFullChannelRequest(chat.id))).full_chat.linked_chat_id
        if not linked_chat:
            return
    except:
        return

    if not config["COMMENTS"]:
        return

    reply_text = random.choice(config["COMMENTS"])
    try:
        await client.send_message(linked_chat, reply_text, reply_to=event.id)
        print(f"üí¨ –û—Ç–≤–µ—Ç–∏–ª –≤ {username}: {reply_text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ: {e}")

# ==== –ö–û–ú–ê–ù–î–´ –í –ò–ó–ë–†–ê–ù–ù–û–ú ====
@client.on(events.NewMessage(outgoing=True))
async def commands(event):
    global config
    me = await client.get_me()
    if event.sender_id != me.id:  
        return

    text = event.raw_text.strip()

    if text == "/help":
        await event.reply(
            "üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
            "/on ‚Äì –≤–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫\n"
            "/off ‚Äì –≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫\n"
            "/addword –°–õ–û–í–û ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ\n"
            "/delword –°–õ–û–í–û ‚Äì —É–¥–∞–ª–∏—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ\n"
            "/addcomment –¢–ï–ö–°–¢ ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n"
            "/delcomment –¢–ï–ö–°–¢ ‚Äì —É–¥–∞–ª–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n"
            "/addchannel @–∫–∞–Ω–∞–ª ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª\n"
            "/delchannel @–∫–∞–Ω–∞–ª ‚Äì —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª\n"
            "/list ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
            "/help ‚Äì —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
        )

    elif text == "/on":
        config["ENABLED"] = True
        save_config()
        await event.reply("‚úÖ –ë–æ—Ç –≤–∫–ª—é—á–µ–Ω")

    elif text == "/off":
        config["ENABLED"] = False
        save_config()
        await event.reply("‚õî –ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω")

    elif text.startswith("/addword "):
        word = text.split(" ", 1)[1].lower()
        if word not in config["KEYWORDS"]:
            config["KEYWORDS"].append(word)
            save_config()
            await event.reply(f"‚úÖ –°–ª–æ–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {word}")

    elif text.startswith("/delword "):
        word = text.split(" ", 1)[1].lower()
        if word in config["KEYWORDS"]:
            config["KEYWORDS"].remove(word)
            save_config()
            await event.reply(f"üóë –°–ª–æ–≤–æ —É–¥–∞–ª–µ–Ω–æ: {word}")

    elif text.startswith("/addcomment "):
        msg = text.split(" ", 1)[1]
        if msg not in config["COMMENTS"]:
            config["COMMENTS"].append(msg)
            save_config()
            await event.reply(f"‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω: {msg}")

    elif text.startswith("/delcomment "):
        msg = text.split(" ", 1)[1]
        if msg in config["COMMENTS"]:
            config["COMMENTS"].remove(msg)
            save_config()
            await event.reply(f"üóë –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É–¥–∞–ª—ë–Ω: {msg}")

    elif text.startswith("/addchannel "):
        ch = text.split(" ", 1)[1].replace("@", "")
        if ch not in config["CHANNELS"]:
            config["CHANNELS"].append(ch)
            save_config()
            await event.reply(f"‚úÖ –ö–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω: {ch}")

    elif text.startswith("/delchannel "):
        ch = text.split(" ", 1)[1].replace("@", "")
        if ch in config["CHANNELS"]:
            config["CHANNELS"].remove(ch)
            save_config()
            await event.reply(f"üóë –ö–∞–Ω–∞–ª —É–¥–∞–ª—ë–Ω: {ch}")

    elif text == "/list":
        await event.reply(
            f"üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
            f"‚ñ∂ –°—Ç–∞—Ç—É—Å: {'–í–ö–õ' if config['ENABLED'] else '–í–´–ö–õ'}\n"
            f"üîë –°–ª–æ–≤–∞: {', '.join(config['KEYWORDS']) or '‚Äî'}\n"
            f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {', '.join(config['COMMENTS']) or '‚Äî'}\n"
            f"üì¢ –ö–∞–Ω–∞–ª—ã: {', '.join(config['CHANNELS']) or '‚Äî'}"
        )

# ==== –°–¢–ê–†–¢ ====
print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ö–æ–º–∞–Ω–¥—ã –ø–∏—à–∏ –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–º (/help)")
client.start()
client.run_until_disconnected()
